name: YouTube Automation Workflowon:  schedule:    - cron: "0 2 * * *"  # Runs daily at 2 AM UTC  workflow_dispatch:jobs:  youtube-automation:    runs-on: ubuntu-latest    steps:      - name: Checkout Repository        uses: actions/checkout@v4      - name: Set Up Python        uses: actions/setup-python@v4        with:          python-version: '3.12'      - name: Cache Python Dependencies        uses: actions/cache@v4        with:          path: ~/.cache/pip          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}          restore-keys: |            ${{ runner.os }}-pip-      - name: Install Dependencies        run: |          python -m venv .venv          source .venv/bin/activate          python -m pip install --upgrade pip          pip install -r requirements.txt      - name: Validate Configuration        run: |          source .venv/bin/activate          mkdir -p config  # Ensures the directory exists          touch config/config.json  # Create an empty config file if missing          python scripts/config_manager.py      - name: Debug Secrets        run: |          echo "?? Debugging Secret Loading..."          echo "CBS Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_CBS != '' }}"          echo "ALXWDWRX Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_ALXWDWRX != '' }}"          echo "MYTHBRAS Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_MYTHBRAS != '' }}"          echo "ALEXBALMASEDA Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_ALEXBALMASEDA != '' }}"          echo "BTC Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_BTC != '' }}"          echo "3KAVEY Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_3KAVEY != '' }}"          echo "513MAT Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_513MAT != '' }}"          echo "LAKECARMEL Secret Loaded: ${{ secrets.YOUTUBE_OAUTH_JSON_LAKECARMEL != '' }}"          echo "YOUTUBE API Key for ALXWDWRX: ${{ secrets.YOUTUBE_API_KEY_ALXWDWRX != '' }}"          echo "YOUTUBE API Key for BTC: ${{ secrets.YOUTUBE_API_KEY_BTC != '' }}"          echo "YOUTUBE API Key for 3KAVEY: ${{ secrets.YOUTUBE_API_KEY_3KAVEY != '' }}"          echo "YOUTUBE API Key for 513MAT: ${{ secrets.YOUTUBE_API_KEY_513MAT != '' }}"          echo "YOUTUBE API Key for LAKECARMEL: ${{ secrets.YOUTUBE_API_KEY_LAKECARMEL != '' }}"      - name: Authenticate with YouTube API        env:          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}          YOUTUBE_OAUTH_JSON_CBS: ${{ secrets.YOUTUBE_OAUTH_JSON_CBS }}          YOUTUBE_OAUTH_JSON_ALXWDWRX: ${{ secrets.YOUTUBE_OAUTH_JSON_ALXWDWRX }}          YOUTUBE_OAUTH_JSON_MYTHBRAS: ${{ secrets.YOUTUBE_OAUTH_JSON_MYTHBRAS }}          YOUTUBE_OAUTH_JSON_ALEXBALMASEDA: ${{ secrets.YOUTUBE_OAUTH_JSON_ALEXBALMASEDA }}          YOUTUBE_OAUTH_JSON_BTC: ${{ secrets.YOUTUBE_OAUTH_JSON_BTC }}          YOUTUBE_OAUTH_JSON_3KAVEY: ${{ secrets.YOUTUBE_OAUTH_JSON_3KAVEY }}          YOUTUBE_OAUTH_JSON_513MAT: ${{ secrets.YOUTUBE_OAUTH_JSON_513MAT }}          YOUTUBE_OAUTH_JSON_LAKECARMEL: ${{ secrets.YOUTUBE_OAUTH_JSON_LAKECARMEL }}        run: |          source .venv/bin/activate          python scripts/youtube_auth.py      - name: Debug Google Credentials        run: |          echo "GOOGLE_APPLICATION_CREDENTIALS path: $GOOGLE_APPLICATION_CREDENTIALS"          if [ -f "$GOOGLE_APPLICATION_CREDENTIALS" ]; then            echo "? Credentials file exists."          else            echo "? Credentials file missing!"          fi      - name: Scrape YouTube Videos        env:          YOUTUBE_API_KEY_ALXWDWRX: ${{ secrets.YOUTUBE_API_KEY_ALXWDWRX }}          YOUTUBE_API_KEY_BTC: ${{ secrets.YOUTUBE_API_KEY_BTC }}          YOUTUBE_API_KEY_3KAVEY: ${{ secrets.YOUTUBE_API_KEY_3KAVEY }}          YOUTUBE_API_KEY_513MAT: ${{ secrets.YOUTUBE_API_KEY_513MAT }}          YOUTUBE_API_KEY_LAKECARMEL: ${{ secrets.YOUTUBE_API_KEY_LAKECARMEL }}        run: |          source .venv/bin/activate          python scripts/youtube_scraper.py      - name: Process Video Clips        run: |          source .venv/bin/activate          python scripts/video_processor.py      - name: Generate Thumbnails        run: |          source .venv/bin/activate          python scripts/thumbnail_generator.py      - name: Generate Watermark        run: |          source .venv/bin/activate          python scripts/generate_watermark.py      - name: Upload to YouTube        env:          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}        run: |          source .venv/bin/activate          python scripts/youtube_uploader.py      - name: Cleanup and Log Completion        run: |          source .venv/bin/activate          python scripts/logging_manager.py      - name: Schedule Next Run        run: |          source .venv/bin/activate          python scripts/schedule_manager.py